buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'test-app'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 11
targetCompatibility = 11

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

if (!project.hasProperty(("jvmbtInternalClassifier"))) {
	ext.jvmbtInternalClassifier = ''
}
if (!project.hasProperty(("jvmbtInternalName"))) {
	ext.jvmbtInternalName = ''
}
if (!project.hasProperty(("jvmbtInternalVersion"))) {
	ext.jvmbtInternalVersion = ''
}
jar {
	archivesBaseName = jvmbtInternalName
	manifest {
		attributes('Main-Class': 'com.example.TestAppApplication')
	}
}
task fatJar(type: Jar) {
	print("running fat jar")
	manifest.from jar.manifest
	archiveClassifier = jvmbtInternalClassifier
	archiveBaseName = jvmbtInternalName
	version = jvmbtInternalVersion

	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it)}
	}
}